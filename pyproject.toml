[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "otobo-znuny-python-client"
dynamic = ["version"]
description = "Python client for OTOBO/Znuny ticket systems"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Tobias Bück", email = "tab@softoft.de" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO"
]
dependencies = [
    "httpx>=0.27,<0.29",
    "pydantic>=2.11.3,<3",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "requests>=2.28,<3",
    "typer>=0.13.1,<0.20",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "mypy>=1.18.2",
    "ruff>=0.13.1",
    "types-pyyaml>=6.0.12",
    "types-requests>=2.32.4.20250913",
]
docs = [
    "mkdocs>=1.6.1,<2.0",
    "mkdocs-material>=9.5.24,<10.0",
]

[project.urls]
homepage = "https://otobo-docs.softoft.de/administration/automation/rest-api"
documentation = "https://otobo-docs.softoft.de/administration/automation/rest-api"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "-q -m unit"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_cli_level = "INFO"
markers = [
    "e2e: end-to-end tests hitting live OTOBO",
    "unit: fast unit tests",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "mypy>=1.18.2",
    "ruff>=0.13.1",
    "types-pyyaml>=6.0.12.20250915",
    "types-requests>=2.32.4.20250913",
]
docs = [
    "mkdocs>=1.6.1,<2.0",
    "mkdocs-material>=9.5.24,<10.0",
]


[tool.ruff]
src = ["src"]
target-version = "py311"
line-length = 100
fix = true
unsafe-fixes = true
show-fixes = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint]
select = [
    # Core pycodestyle/pyflakes
    "E", "F", "W",
    # isort (import order)
    "I",
    # flake8-bugbear (common bugs & smells)
    "B",
    # pyupgrade (modernize for target-version)
    "UP",
    # pep8-naming
    "N",
    # import conventions
    "TID",
    # complexity & simplifications
    "C90", "C4", "RET", "SIM",
    # quality/safety
    "ARG", "BLE", "COM", "ISC", "PIE", "Q", "DTZ", "YTT",
    # tests/style
    "PT",
    # print / debug
    "T20",
    # Ruff-specific
    "RUF",
    # Security (Bandit rules via Ruff) — strict; tune if noisy
    "S",
]

# Ignore security and complexity rules in tests
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # Use of assert detected (asserts are expected in tests)
    "S105", # Possible hardcoded password
    "S106", # Possible hardcoded password function argument
    "S108", # Probable insecure usage of temp file/directory
    "ARG001", # Unused function argument (fixtures)
    "ARG002", # Unused method argument
    "PLR2004", # Magic value used in comparison
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "C901", # Function is too complex
]

[tool.ruff.lint.isort]
known-first-party = ["otobo_znuny"]
combine-as-imports = true
force-sort-within-sections = true


[tool.mypy]
python_version = "3.13"
strict = true
mypy_path = ["src"]
namespace_packages = true
explicit_package_bases = true

warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
no_implicit_reexport = true

disallow_any_generics = true
disallow_subclassing_any = true

plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[mypy-mariadb]
ignore_missing_imports = true

[tool.tox]
requires = ["tox>=4", "tox-min-req>=0.0.9"]
env_list = ["py{311,312,313}-{latest,min}"]

[tool.tox.testenv]
package = "editable"
extras = []
deps = [
    "pytest",
    "pytest-asyncio"
]
commands = [["pytest", "-q"]]

[tool.tox.testenv.min_req]
min = 1